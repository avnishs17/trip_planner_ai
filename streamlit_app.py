import streamlit as st
import requests
import datetime

BASE_URL = "http://localhost:8000"  # Backend endpoint

# Page configuration
st.set_page_config(
    page_title="✈️ AI Travel Planner",
    page_icon="✈️",
    layout="wide",
    initial_sidebar_state="collapsed",
)

# Load custom CSS
def load_css():
    with open("static/style.css", "r") as f:
        st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

# Load styles
try:
    load_css()
except FileNotFoundError:
    st.warning("⚠️ style.css file not found. Using default styling.")

# Main header
st.markdown("""
<div class="main-header">
    <h1>✈️ AI Travel Planner</h1>
    <p>Your intelligent companion for planning amazing adventures</p>
</div>
""", unsafe_allow_html=True)

# Initialize chat history
if "messages" not in st.session_state:
    st.session_state.messages = []

# Input section
st.markdown('<div class="input-section">', unsafe_allow_html=True)

# Create columns for better layout
col1, col2 = st.columns([4, 1])

with col1:
    st.markdown("### 🗨️ What's your travel dream?")
    st.markdown("Tell me where you'd like to go, how long you'll stay, and what you're interested in!")

# Chat input form
with st.form(key="query_form", clear_on_submit=True):
    user_input = st.text_input(
        "", 
        placeholder="e.g., Plan a 5-day romantic getaway to Paris with museums and fine dining",
        help="Be specific about your destination, duration, interests, and budget for better recommendations!"
    )
    
    # Center the button
    col1, col2, col3 = st.columns([1, 1, 1])
    with col2:
        submit_button = st.form_submit_button("🚀 Plan My Trip")

st.markdown('</div>', unsafe_allow_html=True)

# Process user input
if submit_button and user_input.strip():
    try:
        # Show loading state with better UX
        with st.spinner("🧠 AI is crafting your perfect travel plan..."):
            payload = {"question": user_input}
            response = requests.post(f"{BASE_URL}/query", json=payload)

        if response.status_code == 200:
            answer = response.json().get("answer", "No answer returned.")
            
            # Enhanced response display
            st.markdown('<div class="travel-response">', unsafe_allow_html=True)
            
            # Response header
            current_time = datetime.datetime.now()
            st.markdown(f"""
            <div class="response-header">
                <div>
                    <h2 class="response-title">🌟 Your Personalized Travel Plan</h2>
                </div>
                <div class="response-meta">
                    <strong>Generated:</strong> {current_time.strftime('%B %d, %Y at %I:%M %p')}<br>
                    <strong>Created by:</strong> Avnish's AI Travel Agent
                </div>
            </div>
            """, unsafe_allow_html=True)
            
            # Response content
            st.markdown('<div class="response-content">', unsafe_allow_html=True)
            st.markdown(answer)
            st.markdown('</div>', unsafe_allow_html=True)
            
            # Response footer
            st.markdown("""
            <div class="response-footer">
                💡 <strong>Important:</strong> This travel plan was generated by AI. Please verify all information, 
                especially prices, operating hours, and travel requirements before your trip.
            </div>
            """, unsafe_allow_html=True)
            
            st.markdown('</div>', unsafe_allow_html=True)
            
            # Success message
            st.success("🎉 Your travel plan is ready! Safe travels and enjoy your adventure!")
            
        else:
            st.error(f"🚫 Oops! The travel agent couldn't process your request: {response.text}")

    except requests.exceptions.ConnectionError:
        st.error("🔌 Unable to connect to the travel planning service. Please check if the backend is running.")
    except requests.exceptions.Timeout:
        st.error("⏰ The request timed out. Please try again with a simpler query.")
    except Exception as e:
        st.error(f"❌ An unexpected error occurred: {str(e)}")

# Footer section
st.markdown("---")
st.markdown("""
<div style="text-align: center; color: #6b7280; padding: 1rem 0;">
    <p style="margin: 0; font-size: 0.9rem;">
        ✨ Powered by AI • Built by Avnish • 
        <span style="color: #667eea;">Happy Travels!</span>
    </p>
</div>
""", unsafe_allow_html=True)